#
# SPDX-FileCopyrightText: Copyright 2025 Arm Limited and/or its affiliates <open-source-office@arm.com>
# SPDX-License-Identifier: Apache-2.0
#
name: Collect & Build Topic

on:
  workflow_dispatch:
    inputs:
      topic_branch:
        description: "Shared branch name across repos (e.g., feature/foo)"
        required: true
        type: string

jobs:
  collect:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      overrides_json: ${{ steps.collect.outputs.overrides_json }}
    steps:
      - name: Collect PRs by branch across org
        id: collect
        env:
          ORG:       ${{ github.repository_owner }}
          TOPIC:     ${{ inputs.topic_branch }}
          GH_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Construct the full GitHub search query string
          QUERY_STRING="org:$ORG is:pr is:open head:$TOPIC"

          # Create GraphQL payload with the query string embedded directly
          QUERY='
          {
            search(query: "'"$QUERY_STRING"'", type: ISSUE, first: 100) {
              issueCount
              pageInfo {
                hasNextPage
                endCursor
              }
              edges {
                node {
                  ... on PullRequest {
                    repository {
                      nameWithOwner
                    }
                    headRefName
                    headRefOid
                  }
                }
              }
            }
          }'

          # Run the query via gh api
          JSON=$(gh api graphql -f query="$QUERY")

          # Build a repo->sha map from results
          echo "$JSON" | jq -r '
            .data.search.edges
            | map({key: .node.repository.nameWithOwner, value: .node.headRefOid})
            | from_entries
          ' > overrides.json

          # If jq logic above returns null for empty, make an empty object
          if [ ! -s overrides.json ]; then echo "{}" > overrides.json; fi

          echo "overrides_json=$(cat overrides.json | jq -c .)" >> "$GITHUB_OUTPUT"

  build:
    needs: collect
    if: ${{ needs.collect.outputs.overrides_json != '{}' }}
    uses: ./.github/workflows/build-with-manifest-overrides.yml
    with:
      overrides_json: ${{ needs.collect.outputs.overrides_json }}
