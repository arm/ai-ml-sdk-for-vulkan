#
# SPDX-FileCopyrightText: Copyright 2025 Arm Limited and/or its affiliates <open-source-office@arm.com>
# SPDX-License-Identifier: Apache-2.0
#
name: Collect & Build Topic

on:
  workflow_dispatch:
    inputs:
      topic_branch:
        description: "Shared branch name across repos (e.g., feature/foo)"
        required: true
        type: string

jobs:
  collect:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      overrides_json: ${{ steps.collect.outputs.overrides_json }}
    steps:
      - name: Install gh
        uses: cli/cli-action@v2

      - name: Collect PRs by branch across org
        id: collect
        env:
          ORG: arm
          TOPIC: ${{ inputs.topic_branch }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Find open PRs whose headRefName matches the topic branch across the org
          JSON=$(gh api graphql -f query='
            query($org:String!, $branch:String!, $after:String) {
              search(query: $org + " is:pr is:open head:" + $branch, type: ISSUE, first: 100, after: $after) {
                issueCount
                pageInfo { hasNextPage endCursor }
                edges {
                  node {
                    ... on PullRequest {
                      repository { nameWithOwner }
                      headRefName
                      headRefOid
                    }
                  }
                }
              }
            }' -F org:"org:${ORG}" -F branch:"${TOPIC}")

          # Build a repo->sha map from results
          echo "$JSON" | jq -r '
            .data.search.edges
            | map({repo: .node.repository.nameWithOwner, sha: .node.headRefOid})
            | from_entries? as $noop
            | reduce ( .[] ) as $i ({}; .[$i.repo]=$i.sha)
          ' > overrides.json

          # If jq logic above returns null for empty, make an empty object
          if [ ! -s overrides.json ]; then echo "{}" > overrides.json; fi

          echo "overrides_json=$(cat overrides.json | jq -c .)" >> "$GITHUB_OUTPUT"

  build:
    needs: collect
    if: ${{ needs.collect.outputs.overrides_json != '{}' }}
    uses: ./.github/workflows/build-with-manifest-overrides.yml
    with:
      overrides_json: ${{ needs.collect.outputs.overrides_json }}
